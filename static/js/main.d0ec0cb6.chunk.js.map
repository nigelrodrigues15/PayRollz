{"version":3,"sources":["actions/employee_actions.js","reducers/employeeReducer.js","reducers/monthsReducer.js","reducers/rootReducer.js","components/landing/landing.jsx","components/landing/landing_container.jsx","actions/database_actions.js","components/dashboard/dashboard.jsx","components/dashboard/dashboard_container.jsx","components/employee/payslipForm.jsx","components/employee/employee.jsx","components/employee/employee_container.jsx","components/employeeForm/employeeForm.jsx","components/employeeForm/employeeForm_container.jsx","App.js","serviceWorker.js","index.js","store.js"],"names":["nextEmployeeId","createEmployee","employeeInfo","dispatch","type","id","showEmployee","employeeId","removeEmployee","initialState","employees","employeeReducer","state","action","Object","freeze","newState","merge","console","log","payload","info","monthsReducer","appReducer","combineReducers","months","rootReducer","database","Landing","props","fileReader","FileReader","onload","event","setDatabase","JSON","parse","target","result","history","push","className","Button","variant","component","color","onChange","file","readAsText","onError","err","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","style","fontSize","marginRight","React","Component","withRouter","connect","ownprops","Dashboard","this","map","employee","i","key","to","name","month","responsive","superLargeDesktop","breakpoint","max","min","items","partialVisibilityGutter","desktop","tablet","mobile","payperiodMonth","letterSpacing","fontWeight","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","partialVisible","renderButtonGroupOutside","renderDotsOutside","showDots","sliderClass","slidesToSlide","swipeable","employeeList","monthList","FormControl","InputLabel","Select","labelId","value","MenuItem","FormHelperText","fetchEmployees","PayslipForm","parameters","payslip","dateParts","payendDate","split","Date","totalReg","getTime","parseFloat","wage","regHrs","otHrs","holidayHrs","EI","CPP","Tax","employeeHealth","label","TextField","multiline","rowsMax","utils","DateFnsUtils","disableToolbar","format","margin","KeyboardButtonProps","todaysDate","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","colSpan","align","toUpperCase","dateselect","TableBody","textarea","defaultWage","defaultEEhealth","defaultERhealth","Employee","payslips","data","keys","paymentDate","totalOT","totalHld","vacationPay","totalEarn","totalDeduct","toLocaleString","toLocaleDateString","toFixed","String","incentive","employerHealth","payslipList","iframe","document","frames","getElementById","iframeWindow","contentWindow","focus","print","payslipsList","reverse","employeeData","match","params","employeeID","EmployeeForm","sampleEmployee","App","exact","path","DashboardContainer","Boolean","window","location","hostname","preloadedState","require","ReactDOM","render","store","createStore","applyMiddleware","thunk","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0ec0cb6.chunk.js","sourcesContent":["export const FETCH_EMPLOYEES = 'FETCH_EMPLOYEES';\nexport const fetchEmployees = () => dispatch => dispatch({\n    type: FETCH_EMPLOYEES\n});\n\n\nexport const CREATE_EMPLOYEE = 'CREATE_EMPLOYEE';\nexport const nextEmployeeId = 0;\nexport const createEmployee = (employeeInfo) => dispatch => {\n    dispatch({\n        type: CREATE_EMPLOYEE,\n        id: nextEmployeeId++,\n        employeeInfo\n    })\n};\n\nexport const SHOW_EMPLOYEE = 'SHOW_EMPLOYEE';\nexport const showEmployee = employeeId => {\n    return {\n        type: SHOW_EMPLOYEE,\n        employeeId\n    };\n};\n\nexport const REMOVE_EMPLOYEE = 'REMOVE_EMPLOYEE';\nexport const removeEmployee = (employeeId) => dispatch => {\n    dispatch({\n     type: REMOVE_EMPLOYEE,\n     employeeId\n    })\n};\n","import merge from \"lodash/merge\";\nimport { FETCH_EMPLOYEES, CREATE_EMPLOYEE, SHOW_EMPLOYEE, REMOVE_EMPLOYEE } from \"../actions/employee_actions\";\n\nconst initialState = {employees: []};\n\nconst employeeReducer = (state = initialState, action) => {\n  Object.freeze(state);\n  let newState = merge({}, state);\n  switch (action.type) {\n\n    case FETCH_EMPLOYEES:\n      console.log('fetching employees')\n      console.log(newState)\n      // merge(newState,{[action.company.id]: action.company});\n\n    return action.payload;\n\n    case CREATE_EMPLOYEE:\n    return [\n        ...state,\n        {\n            id: action.id,\n            info: action.employeeInfo\n        }\n    ]\n\n    case SHOW_EMPLOYEE:\n    return action.payload;\n\n    case REMOVE_EMPLOYEE:\n    return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default employeeReducer;","import merge from \"lodash/merge\";\nimport { FETCH_EMPLOYEES, CREATE_EMPLOYEE, SHOW_EMPLOYEE, REMOVE_EMPLOYEE } from \"../actions/employee_actions\";\n\n\nconst monthsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = merge({}, state);\n  console.log(state);\n  switch (action.type) {\n\n    case FETCH_EMPLOYEES:\n      console.log('fetching employees')\n      console.log(newState)\n      // merge(newState,{[action.company.id]: action.company});\n\n    return action.payload;\n\n    case CREATE_EMPLOYEE:\n    return [\n        ...state,\n        {\n            id: action.id,\n            info: action.employeeInfo\n        }\n    ]\n\n    case SHOW_EMPLOYEE:\n    return action.payload;\n\n    case REMOVE_EMPLOYEE:\n    return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default monthsReducer;","import { combineReducers } from 'redux';\nimport employeeReducer from './employeeReducer';\nimport monthsReducer from './monthsReducer';\n\nconst appReducer = combineReducers({\n    employees: employeeReducer,\n    months: monthsReducer\n  })\n  \nconst rootReducer = (state, action) => {\n\n    if (action.type === 'SET_DATABASE') {\n        return action.database\n    }\n\n    return appReducer(state, action)\n  }\n\nexport default rootReducer","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Files from 'react-files'\nimport { setDatabase } from \"../../actions/database_actions\";\n\n\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fileReader = new FileReader();\n\n        this.fileReader.onload = (event) => {\n\n            this.props.setDatabase(JSON.parse(event.target.result));\n            this.props.history.push(`/dashboard`);  \n        };\n    }\n\n    \n\n    render () {\n        return (\n            <div className=\"landing\">\n            <div className='landing-image'></div>\n            <div className=\"oldData\">\n                    <Button id='UIbutton' variant=\"outlined\" component=\"label\" color=\"default\">\n                        <Files\n                            className=\"files-dropzone\"\n                            onChange={file => {\n                                this.fileReader.readAsText(file[0]);\n                            }}\n                            onError={err => console.log(err)}\n                            accepts={['.json']}\n                            multiple\n                            maxFiles={3}\n                            maxFileSize={10000000}\n                            minFileSize={0}\n                            clickable\n                        >\n                            \n                            <h1><CloudUploadIcon style={{ fontSize: 45, marginRight: 45 }} /> Upload Database</h1> \n                        </Files>\n                    </Button>\n            </div>\n            <br/><br/><br/><br/><br/><br/><br/>\n            <br/><br/><br/><br/><br/><br/><br/>\n        </div>\n        );\n    }\n\n}\n\n\nexport default withRouter(Landing);\n{/* <input type=\"file\" style={{ display: \"none\" }} onChange={this.handleFiles}  /> */}","import { connect } from \"react-redux\";\nimport { setDatabase } from \"../../actions/database_actions\";\nimport Landing from \"./landing\";\n\nconst mapStateToProps = (state, ownprops) => {\n  console.log('mapstate2props')\n  console.log(state)\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDatabase: database => dispatch(setDatabase(database)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Landing);","export const SET_DATABASE = 'SET_DATABASE';\nexport const setDatabase = (database) => dispatch => {\n    dispatch({\n        type: SET_DATABASE,\n        database\n    })\n};\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        console.log('component will mount')\n    }\n\n    employeeList(employees=this.props.employees){\n        let result = employees.map((employee,i) => {\n            return (\n                <div key={i} className=\"carouselList\">\n                        <Link className=\"Link\" to={`/employee/${i}`}>\n                                 <div className='listContent'>{employee.name}</div>\n                        </Link>\n                </div>\n            )\n        });\n        return result;\n    }\n\n    monthList(months=this.props.months){\n        let result = months.map((month,i) => {\n            return (\n                <div key={i} className=\"carouselList\">\n                        <Link className=\"Link\" to={`/${month}`}>\n                            <div className='listContent'> {month} </div>\n                        </Link>\n                </div>\n            )\n        });\n        return result;\n    }\n\n    render() {\n\n        const responsive = {\n            superLargeDesktop: {\n                // the naming can be any, depends on you.\n                breakpoint: { max: 4000, min: 3000 },\n                items: 5,\n                partialVisibilityGutter: 40\n            },\n            desktop: {\n                breakpoint: { max: 3000, min: 1024 },\n                items: 3,\n                partialVisibilityGutter: 40\n            },\n            tablet: {\n                breakpoint: { max: 1024, min: 464 },\n                items: 2,\n                partialVisibilityGutter: 30\n            },\n            mobile: {\n                breakpoint: { max: 464, min: 0 },\n                items: 1,\n                partialVisibilityGutter: 30\n            },\n        };\n        var payperiodMonth = 0;\n\n        const handleChange = event => {\n            payperiodMonth = (event.target.value);\n        };\n\n        return (\n            <div className=\"dashboard\">\n                <div className='dashboard-image'></div>\n                <br /><br /><br />\n                <h1 style={{ letterSpacing: 15 + 'px', fontWeight: 400 }} >DASHBOARD</h1>\n                <br /><br /><br />\n                <div className=\"carousel\">\n                    <h1>EMPLOYEES</h1>\n                    <Carousel\n                        responsive={responsive}\n                        additionalTransfrom={0}\n                        arrows\n                        autoPlaySpeed={3000}\n                        centerMode={false}\n                        className=\"\"\n                        containerClass=\"container\"\n                        dotListClass=\"\"\n                        draggable\n                        focusOnSelect={false}\n                        infinite\n                        itemClass=\"\"\n                        keyBoardControl\n                        minimumTouchDrag={80}\n                        partialVisible\n                        renderButtonGroupOutside={false}\n                        renderDotsOutside={false}\n                        showDots={false}\n                        sliderClass=\"\"\n                        slidesToSlide={1}\n                        swipeable\n                    >\n\n                        <div className=\"carouselList\">\n                            <Link className=\"Link\" to=\"/newEmployee\">\n                                <div className='listContent'> + New Employee</div>\n                            </Link>\n                        </div>\n                        {this.employeeList()}\n                        \n                    </Carousel>\n                </div>\n                <br /><br /><br />\n                <div className=\"carousel\">\n                    <h1>MONTHLY SUMMARY</h1>\n                    <Carousel\n                        responsive={responsive}\n                        additionalTransfrom={0}\n                        arrows\n                        autoPlaySpeed={3000}\n                        centerMode={false}\n                        className=\"\"\n                        containerClass=\"container\"\n                        dotListClass=\"\"\n                        draggable\n                        focusOnSelect={false}\n                        infinite\n                        itemClass=\"\"\n                        keyBoardControl\n                        minimumTouchDrag={80}\n                        partialVisible\n                        renderButtonGroupOutside={false}\n                        renderDotsOutside={false}\n                        showDots={false}\n                        sliderClass=\"\"\n                        slidesToSlide={1}\n                        swipeable\n                    >\n                        {this.monthList()}\n\n                    </Carousel>\n                </div>\n                <br /><br /><br />\n                <div className=\"payperiod\">\n                    <FormControl id='paypperiodMonth'>\n                        <InputLabel id=\"monthLabel\">PayPeriod Month</InputLabel>\n                        <Select\n                            labelId=\"monthLabel\"\n                            id=\"monthSelect\"\n                            value={payperiodMonth}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value=\"month\">\n                                <em>Month</em>\n                            </MenuItem>\n                            <MenuItem value={1}>January</MenuItem>\n                            <MenuItem value={2}>Feburary</MenuItem>\n                            <MenuItem value={3}>March</MenuItem>\n                        </Select>\n                        <FormHelperText>Select PayPeriod Month</FormHelperText>\n                    </FormControl>\n                </div>\n            </div>\n        );\n    };\n\n};\n\nexport default withRouter(Dashboard);","import { connect } from \"react-redux\";\nimport { fetchEmployees, createEmployee, showEmployee, removeEmployee } from \"../../actions/employee_actions\";\nimport Dashboard from \"./dashboard\";\n\nconst mapStateToProps = (state, ownprops) => {\n  console.log('mapstate2props')\n  console.log(state)\n  return {\n    employees: state.employees,\n    months: state.months\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmployees: () => dispatch(fetchEmployees()),\n    createEmployee: employeeInfo => dispatch(createEmployee(employeeInfo)),\n    showEmployee: () => dispatch(showEmployee()),\n    removeEmployee: employeeId => dispatch(removeEmployee(employeeId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,KeyboardDatePicker} from '@material-ui/pickers';\n\nclass PayslipForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parameters = {\n            \"name\": \"Name\",\n            \"DOB\": \"Date of Birth\",\n            \"startDate\": \"Start Date\",\n            \"defaultWage\": \"Default Wage\",\n            \"ytdEarnings\": \"YTD Earnings\",\n            \"ytdEI\": \"YTD EI\",\n            \"ytdCPP\": \"YTD CPP\",\n            \"ytdTax\": \"YTD Tax\",\n            \"ytdDeductions\": \"YTD Deductions\"\n        }\n    }\n\n\n    payslipList(payslip, employee) {\n        var dateParts = payslip.payendDate.split(\"/\");\n        var payendDate = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        let paymentDate = new Date(payendDate.getTime() + (7 * 24 * 60 * 60 * 1000));\n        let totalReg = (parseFloat(payslip.wage) * parseFloat(payslip.regHrs));\n        let totalOT = (parseFloat(payslip.wage) * 1.5 * parseFloat(payslip.otHrs));\n        let totalHld = (parseFloat(payslip.wage) * 1.5 * parseFloat(payslip.holidayHrs));\n        let vacationPay = (totalReg * 0.04);\n        let totalEarn = totalReg + totalOT + totalHld + vacationPay;\n        let totalDeduct = parseFloat(payslip.EI) + parseFloat(payslip.CPP) + parseFloat(payslip.Tax) + parseFloat(payslip.employeeHealth)\n        return null\n    }\n\n    textarea(label, value = \"--\") {\n\n        return (\n            <TextField\n                id=\"outlined-multiline-flexible\"\n                label={label}\n                multiline\n                rowsMax=\"4\"\n                value={value}\n                onChange='{handleChange}'\n                variant=\"outlined\"\n            />\n        );\n    }\n    dateselect(label, value) {\n        \n        return (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={label}\n                    value={value}\n                    onChange={\"handleDateChange\"}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </MuiPickersUtilsProvider>\n        );\n    }\n\n    render() {\n        let todaysDate = new Date();\n        console.log(todaysDate)\n        return (\n            <div className=\"newpayslip\">\n                <div key={\"i\"} id=\"pay\" className={\"paycheck\"}>\n                    <br /><br />\n                    <TableContainer component={Paper}>\n                        <Table className={\"classes.table\"} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell colSpan={4}><h2 style={{ letterSpacing: 5 }}>Create a new Payslip</h2></TableCell>\n                                    <TableCell align=\"center\" colSpan={4}><h2 style={{ letterSpacing: 5 }}>{this.props.employee.name.toUpperCase()}</h2></TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell ><h4 style={{ letterSpacing: 5 }}>Pay End Date</h4></TableCell>\n                                    <TableCell align=\"center\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>{this.dateselect(\"Pay End Date\", todaysDate)}</h4></TableCell>\n                                    <TableCell align=\"center\" colSpan={2}></TableCell>\n                                    <TableCell ><h4 style={{ letterSpacing: 5 }}>Payment Date</h4></TableCell>\n                                    <TableCell align=\"center\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>{this.dateselect(\"Payment Date\", todaysDate)}</h4></TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell><h3>Earnings</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>Hours</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>Rate</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>Total</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>YTD</h3></TableCell>\n                                    <TableCell><h3>Deductions</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>Total</h3></TableCell>\n                                    <TableCell align=\"right\"><h3>YTD</h3></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Regular</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Reg. Hrs.\")}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Wage\", this.props.employee.defaultWage)}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"totalreg\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4>Employment Insurance</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"EI\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Overtime</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Overtime. Hrs.\")}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"1.5xwage\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"totalOT\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4>Canada Pension Plan</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"CPP\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Holiday Pay</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Holiday Hrs.\")}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"1.5xwage\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"totalHld\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4>Total Tax Deductions</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"Total Tax\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Performance Incentive</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Performance\")}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"incentive\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4>Employee Health Benefit Contribution</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Health\", this.props.employee.defaultEEhealth)}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Vacation Pay</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"vacatioon\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Employer Health Benefit Contribution</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{this.textarea(\"Health\", this.props.employee.defaultERhealth)}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                </TableRow>\n                                <TableRow key='{row.name}'>\n                                    <TableCell><h4>Total Earnings</h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4></h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"totalEarn\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>YTD amount</h4></TableCell>\n                                    <TableCell><h4>Total Deductions</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>{\"totalDeduct\"}</h4></TableCell>\n                                    <TableCell align=\"right\"><h4>YTD amount</h4></TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell align=\"right\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>Net Pay</h4></TableCell>\n                                    <TableCell align=\"left\" colSpan={2}><h4 >{\"(totalEarn - totalDeduct)\"}</h4></TableCell>\n                                    <TableCell align=\"right\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>YTD Net Pay</h4></TableCell>\n                                    <TableCell align=\"left\" colSpan={2}><h4>ToBeFilled</h4></TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <br/>\n                    <div className=\"payslipformActions\">\n                        <Button id='button-create' variant=\"outlined\" component=\"label\" color=\"secondary\">\n                            Create\n                        </Button>\n                    </div>\n                    <br /><br />\n                </div>\n\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default withRouter(PayslipForm);","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PayslipForm from \"./payslipForm\"\nimport Button from '@material-ui/core/Button';\n\nclass Employee extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parameters = {\n            \"name\": \"Name\",\n            \"DOB\": \"Date of Birth\",\n            \"startDate\": \"Start Date\",\n            \"defaultWage\": \"Wage\",\n            \"defaultEEhealth\": \"Employee Health Contr.\",\n            \"defaultERhealth\": \"Employer Health Contr.\"\n        }\n    }\n\n    employeeList(employee = this.props.employee) {\n        delete employee.payslips\n        let data = Object.keys(employee);\n        let i = 0;\n\n        let result = data.map((key, i) => {\n            return (\n                <div key={i} className={\"info-\" + key}>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label={this.parameters[key]}\n                        multiline\n                        rowsMax=\"4\"\n                        value={employee[key]}\n                        onChange='{handleChange}'\n                        variant=\"outlined\"\n                    />\n                </div>\n            )\n        });\n        return result;\n    }\n    payslipList(payslip, employee) {\n        var dateParts = payslip.payendDate.split(\"/\");\n        var payendDate = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]); \n        let paymentDate = new Date(payendDate.getTime() + (7 * 24 * 60 * 60 * 1000));\n        let totalReg = (parseFloat(payslip.wage) * parseFloat(payslip.regHrs));\n        let totalOT = (parseFloat(payslip.wage)* 1.5 * parseFloat(payslip.otHrs));\n        let totalHld = (parseFloat(payslip.wage) * 1.5 * parseFloat(payslip.holidayHrs));\n        let vacationPay = (totalReg * 0.04);\n        let totalEarn = totalReg + totalOT + totalHld + vacationPay;\n        let totalDeduct = parseFloat(payslip.EI) + parseFloat(payslip.CPP) + parseFloat(payslip.Tax) + parseFloat(payslip.employeeHealth)\n        return (\n            <div key={\"i\"} id=\"pay\" className={\"paycheck\"}>\n                <br/><br/>\n                <TableContainer component={Paper}>\n                    <Table className={\"classes.table\"} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell><h2 style={{ letterSpacing: 5}}>EDO JAPAN</h2></TableCell>\n                                <TableCell align=\"center\" colSpan={7}><h2 style={{ letterSpacing: 5}}>{employee.name.toUpperCase()}</h2></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell ><h4 style={{ letterSpacing: 5}}>Pay End Date</h4></TableCell>\n                                <TableCell align=\"center\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>{payendDate.toLocaleString(\"en-AU\").split(\",\")[0]}</h4></TableCell>\n                                <TableCell align=\"center\" colSpan={2}></TableCell>\n                                <TableCell ><h4 style={{ letterSpacing: 5}}>Payment Date</h4></TableCell>\n                                <TableCell align=\"center\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>{paymentDate.toLocaleDateString(\"en-AU\").split(\",\")[0]}</h4></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><h3>Earnings</h3></TableCell>\n                                <TableCell align=\"right\"><h3>Hours</h3></TableCell>\n                                <TableCell align=\"right\"><h3>Rate</h3></TableCell>\n                                <TableCell align=\"right\"><h3>Total</h3></TableCell>\n                                <TableCell align=\"right\"><h3>YTD</h3></TableCell>\n                                <TableCell><h3>Deductions</h3></TableCell>\n                                <TableCell align=\"right\"><h3>Total</h3></TableCell>\n                                <TableCell align=\"right\"><h3>YTD</h3></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Regular</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.regHrs}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.wage}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{totalReg.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4>Employment Insurance</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.EI}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Overtime</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.otHrs}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{String((parseFloat(payslip.wage) * 1.5).toFixed(2))}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{totalOT.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4>Canada Pension Plan</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.CPP}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Holiday Pay</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.holidayHrs}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{String((parseFloat(payslip.wage) * 1.5).toFixed(2))}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{totalHld.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4>Total Tax Deductions</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.Tax}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Performance Incentive</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.incentive}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.incentive}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4>Employee Health Benefit Contribution</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.employeeHealth}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Vacation Pay</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4>{vacationPay.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Employer Health Benefit Contribution</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4>{payslip.employerHealth}</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                            </TableRow>\n                            <TableRow key='{row.name}'>\n                                <TableCell><h4>Total Earnings</h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4></h4></TableCell>\n                                <TableCell align=\"right\"><h4>{totalEarn.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>YTD amount</h4></TableCell>\n                                <TableCell><h4>Total Deductions</h4></TableCell>\n                                <TableCell align=\"right\"><h4>{totalDeduct.toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\"><h4>YTD amount</h4></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell align=\"right\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>Net Pay</h4></TableCell>\n                                <TableCell align=\"left\" colSpan={2}><h4 >{(totalEarn - totalDeduct).toFixed(2)}</h4></TableCell>\n                                <TableCell align=\"right\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>YTD Net Pay</h4></TableCell>\n                                <TableCell align=\"left\" colSpan={2}><h4 style={{ letterSpacing: 5 }}>ToBeFilled</h4></TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <br/>\n                <div className=\"payslipActions\">\n                    <Button id='button-task' variant=\"outlined\" component=\"label\" color=\"secondary\">\n                        CRA Check\n                    </Button>\n                    <Button id='button-task' variant=\"outlined\" component=\"label\" color=\"secondary\">\n                        Print\n                    </Button>\n                </div>\n                <br/><br/>\n            </div>\n        );\n    }\n    payslipsList(payslips = this.props.payslips){\n        let result = payslips.map((payslip, i) => {\n            return (\n                this.payslipList(payslip, this.props.employee)\n            )\n        });\n        return result;\n    }\n\n    printIframe() {\n        debugger\n        const iframe = document.frames ? document.frames[\"pay\"] : document.getElementById(\"pay\");\n        const iframeWindow = iframe.contentWindow || iframe;\n\n        iframe.focus();\n        iframeWindow.print();\n\n        return false;\n    };\n\n    render() {\n\n        return (\n            <div className=\"employee\">\n                <div className='employee-image'></div>\n                <br /><br /><br />\n                <h1 style={{ letterSpacing: 15 + 'px', fontWeight: 350 }} >{this.props.employee.name.toUpperCase()}</h1>\n                <br /><br /><br />\n                <div className='employee-info'>\n                    <h2 style={{ letterSpacing: 5 + 'px' }}>INFO</h2>\n                    <br />\n                    <div className=\"basic-info\">\n                        {this.employeeList()}\n                    </div>\n                </div>\n                <h2 style={{ letterSpacing: 5 + 'px' }}>PAYSLIPS</h2>\n                <div className=\"payslips\">\n                    <PayslipForm employee={this.props.employee}/>\n                    {this.payslipsList().reverse()}\n                    <br /><br /><br />\n                    <br /><br /><br />\n                    <br /><br /><br />\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default withRouter(Employee);","import { connect } from \"react-redux\";\nimport { fetchEmployees, createEmployee, showEmployee, removeEmployee } from \"../../actions/employee_actions\";\nimport Employee from \"./employee\";\n\nconst mapStateToProps = (state, ownprops) => {\n  console.log('mapstate2props')\n  console.log(state)\n  let employeeData = state.employees[ownprops.match.params.employeeID]\n  return {\n    employee: employeeData,\n    payslips: employeeData.payslips\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmployees: () => dispatch(fetchEmployees()),\n    createEmployee: employeeInfo => dispatch(createEmployee(employeeInfo)),\n    showEmployee: () => dispatch(showEmployee()),\n    removeEmployee: employeeId => dispatch(removeEmployee(employeeId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Employee);","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass EmployeeForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parameters = {\n            \"name\": \"Name\",\n            \"DOB\": \"Date of Birth\",\n            \"startDate\": \"Start Date\",\n            \"defaultWage\": \"Default Wage\",\n            \"ytdEarnings\": \"YTD Earnings\",\n            \"ytdEI\": \"YTD EI\",\n            \"ytdCPP\": \"YTD CPP\",\n            \"ytdTax\": \"YTD Tax\",\n            \"ytdDeductions\": \"YTD Deductions\"\n        }\n        this.sampleEmployee ={\n            \"name\": \"Person 1\",\n            \"DOB\": \"15/10/1995\",\n            \"startDate\": \"5/10/2005\",\n            \"defaultWage\": \"15.00\",\n        }\n    }\n\n    employeeList(employee = this.sampleEmployee) {\n        let data = Object.keys(employee);\n        let i = 0;\n\n        let result = data.map((key, i) => {\n            return (\n                <div key={i} className={\"info-\" + key}>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label={this.parameters[key]}\n                        multiline\n                        rowsMax=\"4\"\n                        value={employee[key]}\n                        onChange='{handleChange}'\n                        variant=\"outlined\"\n                    />\n                </div>\n            )\n        });\n        return result;\n    }\n    \n    render() {\n\n        return (\n            <div className=\"employee\">\n                <div className='employee-image'></div>\n                <br /><br /><br />\n                <h1 style={{ letterSpacing: 15 + 'px', fontWeight: 350 }} >NEW EMPLOYEE</h1>\n                <br /><br /><br />\n                <div className='employee-info'>\n                    <div className=\"basic-info\">\n                        {this.employeeList()}\n                        <Button id='button-create' variant=\"outlined\" component=\"label\" color=\"secondary\">\n                            Create\n                        </Button>\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n\n}\n\n\nexport default withRouter(EmployeeForm);","import { connect } from \"react-redux\";\nimport { fetchEmployees, createEmployee, showEmployee, removeEmployee } from \"../../actions/employee_actions\";\nimport EmployeeForm from \"./employeeForm\";\n\nconst mapStateToProps = (state, ownprops) => {\n  return {\n    \n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmployees: () => dispatch(fetchEmployees()),\n    createEmployee: employeeInfo => dispatch(createEmployee(employeeInfo)),\n    showEmployee: () => dispatch(showEmployee()),\n    removeEmployee: employeeId => dispatch(removeEmployee(employeeId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeForm);","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, Link, HashRouter } from \"react-router-dom\";\nimport Landing from \"./components/landing/landing_container\";\nimport DashboardContainer from \"./components/dashboard/dashboard_container\";\nimport Employee from \"./components/employee/employee_container\";\nimport EmployeeForm from \"./components/employeeForm/employeeForm_container\";\nimport { connect } from 'react-redux';\nimport './App.css';\n\nclass App extends Component {\n render() {\n  return (\n   <div className=\"App\">\n    \n    <Switch>\n        <Route exact path=\"/dashboard\" component={DashboardContainer} />\n        <Route exact path=\"/employee/:employeeID\" component={Employee} />\n        <Route exact path=\"/newEmployee\" component={EmployeeForm} />\n        <Route exact path=\"/\" component={Landing} />\n    </Switch>\n\n    \n   </div>\n  );\n }\n}\nexport default connect()(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport const preloadedState = require('./database.json')\n// export const preloadedState = {}\n\nReactDOM.render(\n    <Provider store={configureStore(preloadedState)}>\n         <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\n// const initialState = {\n//     employees: [],\n//     months: ['Jan', 'Feb', 'Mar']\n// };\n\nexport default function configureStore(preloadedState) {\n    return createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n}"],"sourceRoot":""}